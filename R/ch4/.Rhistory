library(dplyr)
df_exam <- read.csv('../data/csv_exam_outlier.csv')
View(df_exam)
# 데이터정제 : 이상치 -> 결측치로 수정
df_exam$math <- ifelse(df_exam$math > 100 | df_exam$math < 0)
# 데이터정제 : 이상치 -> 결측치로 수정
df_exam$math <- ifelse(df_exam$math > 100 | df_exam$math < 0, NA)
# 데이터정제 : 이상치 -> 결측치로 수정
df_exam$math <- ifelse(df_exam$math > 100 | df_exam$math < 0, NA, df_exam)
View(df_exam)
# 데이터정제 : 이상치 -> 결측치로 수정
df_exam$math <- ifelse(df_exam$math > 100 | df_exam$math < 0, NA, df_exam$math)
df_exam <- read.csv('../data/csv_exam_outlier.csv')
# 데이터정제 : 이상치 -> 결측치로 수정
df_exam$math <- ifelse(df_exam$math > 100 | df_exam$math < 0, NA, df_exam$math)
View(df_exam)
# 데이터정제 : 이상치 -> 결측치로 수정
df_exam$math <- ifelse(df_exam$math > 100 | df_exam$math < 0, NA, df_exam$math)
df_exam$english<- ifelse(df_exam$english > 100 | df_exam$english < 0, NA, df_exam$english)
df_exam$science <- ifelse(df_exam$science > 100 | df_exam$science < 0, NA, df_exam$science)
View(df_exam)
df_exam <- read.csv('../data/csv_exam_na.csv')
is.na(df_exam)
# 결측치 제거
df_exam %>% filter(!is.na(math) & !is.na(english) & !is.na(science))
# 결측치 제거
new_exam <- df_exam %>% filter(!is.na(math) & !is.na(english) & !is.na(science))
View(new_exam)
new_exam %>% muate(total= math+english+science) %>% arrange(desc(total))
new_exam %>% mutate(total= math+english+science) %>% arrange(desc(total))
new_exam <- df_exam %>% filter(!is.na(math) & !is.na(english) & !is.na(science))
View(new_exam)
library(dplyr)
df_exam <- read.csv('../data/csv_exam_outlier.csv')
# 데이터정제 : 이상치 -> 결측치로 수정
df_exam$math <- ifelse(df_exam$math > 100 | df_exam$math < 0, NA, df_exam$math)
df_exam$english<- ifelse(df_exam$english > 100 | df_exam$english < 0, NA, df_exam$english)
df_exam$science <- ifelse(df_exam$science > 100 | df_exam$science < 0, NA, df_exam$science)
new_exam <- df_exam %>% filter(!is.na(math) & !is.na(english) & !is.na(science))
View(new_exam)
df_exam$math <- ifelse( !is.na(math), math, 0)
df_exam$english <- ifelse( !is.na(english), english, 0)
df_exam$science <- ifelse( !is.na(science), science, 0)
df_exam <- read.csv('../data/csv_exam_outlier.csv')
# 데이터정제 : 이상치 -> 결측치로 수정
df_exam$math <- ifelse(df_exam$math > 100 | df_exam$math < 0, NA, df_exam$math)
df_exam$english<- ifelse(df_exam$english > 100 | df_exam$english < 0, NA, df_exam$english)
df_exam$science <- ifelse(df_exam$science > 100 | df_exam$science < 0, NA, df_exam$science)
df_exam$math <- ifelse( !is.na(math), math, 0)
df_exam$math <- ifelse( !is.na(df_exam$math), df_exam$math, 0)df_exam$english <- ifelse( !is.na(df_exam$english), df_exam$english, 0)
df_exam$math <- ifelse( !is.na(df_exam$math), df_exam$math, 0)
df_exam$english <- ifelse( !is.na(df_exam$english), df_exam$english, 0)
df_exam$science <- ifelse( !is.na(df_exam$science), df_exam$science, 0)
view(df_exam)
View(df_exam)
df_exa[is.na(df_exam)] <- 0
df_exam[is.na(df_exam)] <- 0
df_exam <- read.csv('../data/csv_exam_outlier.csv')
View(df_exam)
# 데이터정제 : 이상치 -> 결측치로 수정
df_exam$math <- ifelse(df_exam$math > 100 | df_exam$math < 0, NA, df_exam$math)
df_exam$english<- ifelse(df_exam$english > 100 | df_exam$english < 0, NA, df_exam$english)
df_exam$science <- ifelse(df_exam$science > 100 | df_exam$science < 0, NA, df_exam$science)
df_exam[is.na(df_exam)] <- 0
View(df_exam)
# 막대그래프
install.packages('ggplot2')
library(ggplot2)
barqplot(score)
barplot(score)
score <- c(80, 72, 60, 78, 82, 94)
barplot(score)
qplot(score)
qplot(score)
qplot(score)
df_exam <- read.csv('../data/exam.csv')
qplot(df_exam)
qplot(data=df_exam, x=df_exam$id)
qplot(data=df_exam, x=class, y=math)
qplot(data=df_exam, x=id, y=math)
qplot(data=df_exam, x=english, y=math)
qplot(data=df_exam, x=class, y=math)
ggplot(data=df_exam, x=class, y=math)
qplot(data=df_exam, x=class, y=math)
qplot(displ, class, data=df_exam, x=class, y=math)
qplot(displ, class, data=df_exam, x=class, y=math)
qplot(data=df_exam)
qplot(class,math,data=df_exam)
qplot(id, math, data=df_exam, color)
qplot(id, math, data=df_exam)
qplot(id, math, data=df_exam, geom='bar')
qplot(id, math, data=df_exam, geom='var')
qplot(id, math, data=df_exam, geom='point')
qplot(id, math, data=df_exam)
qplot(class, math, data=df_exam)
qplot(id, math, data=df_exam)
qplot(id, math, data=df_exam)
qplot(id, math, data=df_exam, fill = math)
qplot(id, data=df_exam, facets = math ~, binwidth = 2)
qplot(id, data=df_exam, facets = math ~., binwidth = 2)
qplot(id, data=df_exam, facets = math ~., binwidth = 1)
view(economics)
View(economics)
qplot(date, unemploy, data=economics, facets = math ~., binwidth = 1)
qplot(date, unemploy, data=economics, geom='line')
qplot(id, math, data=df_exam, geom = 'col')
# 대한민국 지역별 인구연령 분포
library(dplyr)
library(ggplot2)
library(readxl)
kowep2015 <- read.csv('../data/koweps_2015.csv')
# 컬럼명 변경
kowep2015 <- kowep2015 %>% select(h10_g3, h10_g4, h10_g10, h10_g11, h10_eco0, h10_reg7)
# 컬럼명 변경
kowep2015 <- kowep2015 %>% select(h10_g3, h10_g4, h10_g10, h10_g11, h10_eco9, h10_reg7)
View(kowep2015)
kowep2015 <- rename(kowep2015,
gender=h10_g3,
birth=h10_g4,
married=h10_g10,
religion=h10_g11,
job=h10_eco9,
region=h10_reg7
)
View(kowep2015)
# 지역별 데이터확인
table(kowep2015$region)
# 지역별 데이터확인
table(kowep2015$region)
list_region <- data.frame(region=c(1:7),
region_name=c('서울','수도권(경기/인천)','부산/경남','광주(전남,전북)','강원','제주'))
list_region <- data.frame(region=c(1:7),
region_name=c('서울','수도권(경기/인천)','부산/경남','광주(전남,전북)','강원','충청도','제주도'))
view(list_region)
View(list_region)
#나이대 파생변수 추가
kowep2015 <- koewp2015 %>% mutate(ageg=ifelse(age < 30, 'young',
ifelse(age < 60, 'middle','old')))
# 지역명 파생변수 추가
kowep2015 <- left_join(kowep2015, list_region, by='region')
# 나이 파생변수 추가
kowep2015$age <- 2019 - kowep2015$birth+1
View(kowep2015)
qplotkower2015$age
qplot(kower2015$age)
qplot(koweq2015$age)
qplot(kowep2015$age)
#나이대 파생변수 추가
kowep2015 <- koewp2015 %>% mutate(ageg=ifelse(age < 30, 'young',
ifelse(age < 60, 'middle','old')))
#나이대 파생변수 추가
kowep2015 <- kowep2015 %>% mutate(ageg=ifelse(age < 30, 'young',
ifelse(age < 60, 'middle','old')))
qplot(kowep2015@ageg)
qplot(kowep2015$ageg)
View(kowep2015)
list_region <- data.frame(region=c(1:7),
region_name=c('서울','수도권(경기/인천)','부산/경남','대구/경북','전남/광주','강원/충북','광주/전남/전북/제주'))
View(list_region)
# 나이 파생변수 추가
kowep2015$age <- 2019 - kowep2015$birth+1
View(kowep2015)
qplot(kowep2015$age)
# 나이대 파생변수 추가
kowep2015 <- kowep2015 %>% mutate(ageg=ifelse(age < 30, 'young',
ifelse(age < 60, 'middle','old')))
# 나이대 파생변수 추가
kowep2015 <- kowep2015 %>% mutate(ageg=ifelse(age < 30, 'young',
ifelse(age < 60, 'middle','old')))
list_region <- data.frame(region=c(1:7),
region_name=c('서울','수도권(경기/인천)','부산/경남','대구/경북','대전/충남','강원/충북','광주/전남/전북/제주'))
# 나이대 파생변수 추가
kowep2015 <- kowep2015 %>% mutate(ageg=ifelse(age < 30, 'young' %>%
ifelse(age < 60, 'middle','old')))
# 나이대 파생변수 추가
kowep2015 <- kowep2015 %>% mutate(ageg=ifelse(age < 30, 'young',
ifelse(age < 60, 'middle','old')))
# 컬럼명 변경
kowep2015 <- kowep2015 %>% select(h10_g3, h10_g4, h10_g10, h10_g11, h10_eco9, h10_reg7)
# 지역별 연령대 비율계산
region_ageg <- kowep2015 %>%
group_by(region_name, ageg) %>%
summarise(n=n())
# 대한민국 지역별 인구연령 분포
library(dplyr)
library(ggplot2)
kowep2015 <- read.csv('../data/koweps_2015.csv')
# 컬럼명 변경
kowep2015 <- kowep2015 %>% select(h10_g3, h10_g4, h10_g10, h10_g11, h10_eco9, h10_reg7)
kowep2015 <- rename(kowep2015,
gender=h10_g3,
birth=h10_g4,
married=h10_g10,
religion=h10_g11,
job=h10_eco9,
region=h10_reg7
)
# 지역별 데이터확인
table(kowep2015$region)
list_region <- data.frame(region=c(1:7),
region_name=c('서울','수도권(경기/인천)','부산/경남','대구/경북','대전/충남','강원/충북','광주/전남/전북/제주'))
# 지역명 파생변수 추가
kowep2015 <- left_join(kowep2015, list_region, by='region')
# 나이 파생변수 추가
kowep2015$age <- 2019 - kowep2015$birth+1
View(kowep2015)
# 나이대 파생변수 추가
kowep2015 <- kowep2015 %>% mutate(ageg=ifelse(age < 30, 'young',
ifelse(age < 60, 'middle','old')))
# 지역별 연령대 비율계산
region_ageg <- kowep2015 %>%
group_by(region_name, ageg) %>%
summarise(n=n())
View(region_ageg)
# 지역별 연령대 비율계산
region_ageg <- kowep2015 %>%
group_by(region_name, ageg) %>%
summarise(n=n()) %>%
mutate(tot_group=sum(n)) %>%
mutate(per=round(n/tot_group*100, 2))
View(region_ageg)
# 그래프 출력
ggplot(data=region_ageg)
# 그래프 출력
ggplot(data=region_ageg, aes(x=region_name,y=per, fill=ageg))
# 그래프 출력
ggplot(data=region_ageg, aes(x=region_name,y=per, fill=ageg))+geom_col()
library(dplyr)
library(ggplot2)
# 컬럼명 변경
kowep2015 <- kowep2015 %>% select(h10_g3, h10_g4, h10_g10, h10_g11, h10_eco9, h10_reg7)
kowep2015 <- rename(kowep2015,
gender=h10_g3,
birth=h10_g4,
married=h10_g10,
religion=h10_g11,
job=h10_eco9,
income=p1002_8aq1
)
library(dplyr)
library(ggplot2)
# 컬럼명 변경
kowep2015 <- kowep2015 %>% select(h10_g3, h10_g4, h10_g10, h10_g11, h10_eco9, p1002_8aq1)
kowep2015 <- rename(kowep2015,
gender=h10_g3,
birth=h10_g4,
married=h10_g10,
religion=h10_g11,
job=h10_eco9,
income=p1002_8aq1
)
# 컬럼명 변경
kowep2015 <- kowep2015 %>% select(h10_g3, h10_g4, h10_g10, h10_g11, h10_eco9, p1002_8aq1)
kowep2015 <- read.csv('../data/koweps_2015.csv')
# 컬럼명 변경
kowep2015 <- kowep2015 %>% select(h10_g3, h10_g4, h10_g10, h10_g11, h10_eco9, p1002_8aq1)
kowep2015 <- rename(kowep2015,
gender=h10_g3,
birth=h10_g4,
married=h10_g10,
religion=h10_g11,
job=h10_eco9,
income=p1002_8aq1
)
View(kowep2015)
table(kowep2015$income)
# 나이 파생변수 추가
kowep2015$age <- 2015 - kowep2015$birth + 1
View(kowep2015)
summary(kowep2015$age)
# 연령별 월급컬럼 추가, 계산 age_income
age_income <- kowep2015 %>%
filter(!is.na(income)) %>%
group_by(age) %>%
summarise(mean_income = mean(income))
# 연령별 총소득 / 연령수
ggplot(data=age_income, aes(x=age, y=mean_income))+geom_line()
View(age_income)
